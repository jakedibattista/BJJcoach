name: Deploy to Cloud Run

# Trigger new run after secrets update
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: bjj-coach
  BUCKET_NAME: bjjcoach-files

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.GCP_SA_EMAIL }}
        audience: sts.googleapis.com

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure gcloud CLI
      run: |
        gcloud config set project ${{ env.PROJECT_ID }}
        gcloud config set run/region ${{ env.REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure Docker for GCP
      run: |
        gcloud auth configure-docker gcr.io --quiet

    - name: Build and push container image
      run: |
        gcloud builds submit --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}

    - name: Copy files to Cloud Storage
      run: |
        gcloud storage cp -r public/* gs://${{ env.BUCKET_NAME }}/

    - name: Deploy to Cloud Run
      run: |
        gcloud run services replace cloud-run-instant-deploy-main/service.yaml \
          --region=${{ env.REGION }} \
          --project=${{ env.PROJECT_ID }}
        gcloud run services update ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --project=${{ env.PROJECT_ID }} \
          --set-env-vars="YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }},JWT_SECRET=${{ secrets.JWT_SECRET }},DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }}"

    - name: 'Make Cloud Run service public'
      run: |
        gcloud run services add-iam-policy-binding ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --member="allUsers" \
          --role="roles/run.invoker" 